{"remainingRequest":"D:\\project\\supermarket-jxc-sys-vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\project\\supermarket-jxc-sys-vue\\src\\components\\upload.vue?vue&type=style&index=0&id=66afef91&scoped=true&lang=css","dependencies":[{"path":"D:\\project\\supermarket-jxc-sys-vue\\src\\components\\upload.vue","mtime":1715882558000},{"path":"D:\\project\\supermarket-jxc-sys-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1716113548474},{"path":"D:\\project\\supermarket-jxc-sys-vue\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1716113543792},{"path":"D:\\project\\supermarket-jxc-sys-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1716113545439},{"path":"D:\\project\\supermarket-jxc-sys-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1716113548707},{"path":"D:\\project\\supermarket-jxc-sys-vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1716113543526}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouYXZhdGFyLXVwbG9hZGVyIHsNCiAgYm9yZGVyOiAxcHggZGFzaGVkICNkOWQ5ZDk7DQogIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIG92ZXJmbG93OiBoaWRkZW47DQp9DQouYXZhdGFyLXVwbG9hZGVyLWljb24gew0KICBmb250LXNpemU6IDI4cHg7DQogIGNvbG9yOiAjOGM5MzlkOw0KICB3aWR0aDogMTAwcHg7DQogIGhlaWdodDogMTAwcHg7DQogIGxpbmUtaGVpZ2h0OiAxMDBweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLmF2YXRhciB7DQogIHdpZHRoOiAxMDBweDsNCiAgaGVpZ2h0OiAxMDBweDsNCiAgZGlzcGxheTogYmxvY2s7DQp9DQo="},{"version":3,"sources":["D:\\project\\supermarket-jxc-sys-vue\\src\\components\\upload.vue"],"names":[],"mappings":";AAqFA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB","file":"D:/project/supermarket-jxc-sys-vue/src/components/upload.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <el-upload\r\n    class=\"avatar-uploader\"\r\n    :action=\"uploadUrl\"\r\n    :show-file-list=\"false\"\r\n    :on-success=\"handleSuccess\"\r\n    :on-error=\"handleError\"\r\n    :before-upload=\"beforeImageUpload\"\r\n    :headers=\"headers\"\r\n  >\r\n    <img v-if=\"internalImageUrl\" :src=\"internalImageUrl\" class=\"avatar\" />\r\n    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n  </el-upload>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, watch } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"SingleImageUpload\",\r\n  props: {\r\n    modelValue: String, // 接收外部v-model绑定的值\r\n  },\r\n  emits: [\"update:modelValue\"], // 允许组件更新v-model绑定的值\r\n  setup(props, { emit }) {\r\n    const internalImageUrl = ref(props.modelValue);\r\n    const uploadUrl = \"/api/tencent/cos/upload\"; // 替换成你的上传URL\r\n    const headers = {\r\n      Authorization: `${localStorage.getItem(\"token\")}`,\r\n    };\r\n    // 监听外部v-model变化，更新内部状态\r\n    watch(\r\n      () => props.modelValue,\r\n      (newValue) => {\r\n        internalImageUrl.value = newValue;\r\n      }\r\n    );\r\n\r\n    // 上传成功\r\n    const handleSuccess = (response, file) => {\r\n      const {\r\n        data: { url },\r\n      } = response;\r\n      // 假设后端返回的图片地址是 response.url\r\n      emit(\"update:modelValue\", url); // 用事件更新v-model\r\n\r\n      internalImageUrl.value = url; // 更新组件内的图片显示\r\n    };\r\n\r\n    // 上传失败\r\n    const handleError = () => {\r\n      emit(\"update:modelValue\", \"\"); // 如果上传失败，清空v-model绑定的值\r\n      internalImageUrl.value = \"\"; // 清空组件内的图片显示\r\n    };\r\n\r\n    // 上传之前的验证\r\n    const beforeImageUpload = (file) => {\r\n      const isJPG = file.type === \"image/jpeg\";\r\n      const isPNG = file.type === \"image/png\";\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isJPG && !isPNG) {\r\n        this.$message.error(\"上传图片只能是 JPG/PNG 格式!\");\r\n        return false;\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error(\"上传图片大小不能超过 2MB!\");\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    return {\r\n      internalImageUrl,\r\n      uploadUrl,\r\n      handleSuccess,\r\n      handleError,\r\n      beforeImageUpload,\r\n      headers,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.avatar-uploader {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 100px;\r\n  height: 100px;\r\n  line-height: 100px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 100px;\r\n  height: 100px;\r\n  display: block;\r\n}\r\n</style>"]}]}